version: '3.8'

services:
  # PostgreSQL Database
  database:
    image: postgres:15-alpine
    container_name: deliveryhub-db
    environment:
      POSTGRES_DB: deliveryhub
      POSTGRES_USER: deliveryhub
      POSTGRES_PASSWORD: deliveryhub123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - deliveryhub-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U deliveryhub -d deliveryhub"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Spring Boot Backend
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: deliveryhub-backend
    environment:
      # Database Configuration
      SPRING_DATASOURCE_URL: jdbc:postgresql://database:5432/deliveryhub
      SPRING_DATASOURCE_USERNAME: deliveryhub
      SPRING_DATASOURCE_PASSWORD: deliveryhub123
      
      # JPA Configuration
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: false
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
      
      # Server Configuration
      SERVER_PORT: 8080
      
      # JWT Configuration (Set these to secure values in production)
      JWT_SECRET: your-secret-key-change-this-in-production
      JWT_EXPIRATION: 86400000
      
      # File Upload Configuration
      SPRING_SERVLET_MULTIPART_MAX_FILE_SIZE: 10MB
      SPRING_SERVLET_MULTIPART_MAX_REQUEST_SIZE: 10MB
      
      # CORS Configuration
      CORS_ALLOWED_ORIGINS: http://localhost:3000,http://localhost:80
      
      # Logging
      LOGGING_LEVEL_COM_EXAMPLE_DELIVERYHUB: INFO
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY: DEBUG
    ports:
      - "8080:8080"
    volumes:
      - ./uploads:/app/uploads
    networks:
      - deliveryhub-network
    depends_on:
      database:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # React Frontend
  frontend:
    build:
      context: ./deliveryhub-frontend
      dockerfile: Dockerfile
    container_name: deliveryhub-frontend
    environment:
      REACT_APP_API_URL: http://localhost:8080/api
      REACT_APP_WS_URL: http://localhost:8080
    ports:
      - "80:80"
      - "443:443"
    networks:
      - deliveryhub-network
    depends_on:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local

networks:
  deliveryhub-network:
    driver: bridge